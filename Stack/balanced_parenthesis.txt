bool balanced_parenthesis(string s) {
    stack<char> st;
    char c;
    for(int i = 0; i<s.length(); i++) {
        if(s[i] == '(' || s[i] == '{' || s[i] == '[') {
            st.push(s[i]);
        } else {
            switch (s[i])
            {
                case ')':
                    c = st.top();
                    st.pop();
                    if(c != '(')
                        return false;
                    break;

                case '}':
                    c = st.top();
                    st.pop();
                    if(c != '{')
                        return false;
                    break;
                case ']':
                    c = st.top();
                    st.pop();
                    if(c != '[')
                        return false;
                        break;
                default:
                    continue;
            }
        }
    }

    if(st.empty() == 0) {
        return false;
    }

    return true;
}